function isTouchDevice() {
  return (
    "ontouchstart" in window ||
    navigator.maxTouchPoints > 0 ||
    navigator.msMaxTouchPoints > 0
  );
}
function fadeAnimations() {
  var e = window.innerWidth < 768 ? "top 100%" : "top 85%",
    t = window.innerWidth < 768 ? "bottom 60%" : "bottom 75%";
  gsap.utils.toArray(".fade-in-chars").forEach((r) => {
    let o = new SplitText(r, { type: "chars" });
    gsap.set(o.chars, { opacity: 0 }),
      gsap
        .timeline({
          scrollTrigger: { trigger: r, start: e, end: t, scrub: !0 },
        })
        .to(o.chars, { opacity: 1, ease: "power1.inOut", stagger: 0.05 });
  }),
    gsap.utils.toArray(".fade-in-words").forEach((r) => {
      let o = new SplitText(r, { type: "words" });
      gsap.set(o.words, { opacity: 0 }),
        gsap
          .timeline({
            scrollTrigger: { trigger: r, start: e, end: t, scrub: !0 },
          })
          .to(o.words, { opacity: 1, ease: "power1.inOut", stagger: 0.1 });
    }),
    gsap.utils.toArray(".fade-in-lines").forEach((r) => {
      let o = new SplitText(r, { type: "lines" });
      gsap.set(o.lines, { opacity: 0 }),
        gsap
          .timeline({
            scrollTrigger: { trigger: r, start: e, end: t, scrub: !0 },
          })
          .to(o.lines, { opacity: 1, ease: "power1.inOut", stagger: 0.15 });
    }),
    gsap.utils.toArray(".fade-in-rich-text").forEach((r) => {
      gsap.utils
        .toArray(
          r.querySelectorAll(
            "h1, h2, h3, h4, h5, h6, p, li, li::marker, blockquote"
          )
        )
        .forEach((r) => {
          let o = new SplitText(r, { type: "lines" });
          gsap.set(o.lines, { opacity: 0 }),
            gsap
              .timeline({
                scrollTrigger: { trigger: r, start: e, end: t, scrub: !0 },
              })
              .to(o.lines, { opacity: 1, ease: "power1.inOut", stagger: 0.15 });
        });
    }),
    gsap.utils.toArray(".fade-in-element").forEach((e) => {
      gsap.set(e, { opacity: 0, y: 0 }),
        gsap
          .timeline({
            scrollTrigger: {
              trigger: e,
              start: "top 90%",
              end: "top 60%",
              scrub: !0,
            },
          })
          .to(e, { opacity: 1, ease: "power2.inOut", y: 0 });
    }),
    gsap.utils.toArray(".fade-in-list").forEach((r) => {
      let o = gsap.utils.toArray(r.children);
      o.forEach((r) => {
        gsap.set(r, { opacity: 0 }),
          gsap.to(r, {
            opacity: 1,
            ease: "power2.inOut",
            scrollTrigger: { trigger: r, start: e, end: t, scrub: !0 },
          });
      });
    });
  var r = window.innerWidth < 768 ? "top 90%" : "top 95%",
    o = window.innerWidth < 768 ? "top 80%" : "top 90%";
  gsap.utils.toArray(".product-link").forEach((e) => {
    gsap.set(e, { opacity: 0, y: 0 }),
      gsap
        .timeline({
          scrollTrigger: { trigger: e, start: r, end: o, scrub: !0 },
        })
        .to(e, { opacity: 1, ease: "power2.inOut", y: 0 });
  });
}
function coverAnimations() {
  let e = document.querySelector(".cover_headline"),
    t = new SplitText(e, { type: "words" });
  gsap.set(t.words, { opacity: 0, filter: "blur(1px)" });
  let r = gsap.timeline();
  r.to(t.words, {
    opacity: 1,
    filter: "blur(0px)",
    ease: "power1.inOut",
    stagger: 0.2,
    duration: 1.4,
    delay: 1.5,
  });
  var o = window.innerWidth < 768 ? "100svh" : "100vh",
    i = window.innerWidth < 768 ? "50svh" : "100vh";
  gsap.set(".cover_wrapper, .cover_background, .cover_content-wrapper", {
    height: o,
  }),
    gsap.set(".bg_cover-video", { height: "130%" }),
    gsap.set(".cover_content-wrapper", {
      backdropFilter: "blur(10px)",
      WebkitBackdropFilter: "blur(10px)",
      backgroundColor: "rgba(0, 0, 0, 0.6)",
    });
  let n = gsap.timeline({
    scrollTrigger: {
      trigger: ".cover",
      start: "top top",
      end: "bottom -50%",
      scrub: !0,
      pin: ".cover_wrapper",
    },
  });
  n.to(".cover_content", { opacity: 0, scale: 0.9, duration: 1 }, 0)
    .to(
      ".cover_content-wrapper",
      {
        backdropFilter: "blur(0px)",
        WebkitBackdropFilter: "blur(0px)",
        backgroundColor: "rgba(0, 0, 0, 0)",
        duration: 0.5,
      },
      0
    )
    .to(".bg_cover-video", { height: "100%", duration: 2 }, "<")
    .to(
      ".cover_wrapper, .cover_background, .cover_content-wrapper",
      { height: i, duration: 2 },
      "<"
    );
}
function logoSlider() {
  let e = document.querySelectorAll(".logo-slider");
  for (let t of e)
    new Splide(t, {
      type: "loop",
      autoWidth: !0,
      arrows: !1,
      pagination: !1,
      gap: "4rem",
      drag: !1,
      autoScroll: { autoStart: !0, speed: 1, pauseOnHover: !1 },
      breakpoints: { 600: { gap: "3rem", autoScroll: { speed: 0.5 } } },
    }).mount(window.splide.Extensions);
}
function portfolioSlider() {
  let e = document.querySelectorAll(".portfolio-slider");
  for (let t of e)
    new Splide(t, {
      autoWidth: !0,
      arrows: !1,
      pagination: !1,
      focus: "center",
      gap: "2rem",
      type: "loop",
      drag: "free",
      autoScroll: { autoStart: !0, speed: 1.5 },
      intersection: { inView: { autoScroll: !0 }, outView: { autoScroll: !1 } },
      breakpoints: { 600: { autoScroll: { speed: 1 }, gap: "1rem" } },
    }).mount(window.splide.Extensions);
}
function stackSlider() {
  let e = document.querySelectorAll(".stack");
  for (let t of e)
    new Splide(t, {
      autoWidth: !0,
      arrows: !0,
      pagination: !0,
      focus: "center",
      gap: "2rem",
      drag: !0,
      snap: !0,
      speed: 500,
      type: "loop",
      easing: "ease-out",
      autoScroll: { autoStart: !0, speed: 1.5 },
      intersection: { inView: { autoScroll: !0 }, outView: { autoScroll: !1 } },
      breakpoints: { 600: { gap: "1rem" } },
    }).mount(window.splide.Extensions);
}
console.log("Custom JS anonivate v5"),
  gsap.registerPlugin(ScrollTrigger, ScrollSmoother, SplitText),
  isTouchDevice() ||
    ScrollSmoother.create({ smooth: 1.1, effects: !0, smoothTouch: 0 }),
  document.fonts.ready
    .then(function () {
      console.log("Fonts loaded"), fadeAnimations(), coverAnimations();
    })
    .catch(function () {
      console.error("Font loading error");
    }),
  gsap.utils.toArray(".sticky-card").forEach((e, t, r) => {
    r.length;
    var o = window.innerWidth < 768 ? "bottom 40%" : "bottom 60%";
    gsap.timeline({
      scrollTrigger: {
        trigger: e,
        start: o,
        pin: !0,
        end: () => `+=${1 * window.innerHeight}`,
        scrub: !0,
        onUpdate(t) {
          let r = t.progress;
          gsap.to(e, { opacity: 1 - r, scale: 1 - r });
        },
      },
    });
  }),
  console.log("Custom Spline"),
  logoSlider(),
  portfolioSlider(),
  stackSlider(),
  document.addEventListener("DOMContentLoaded", function () {
    let e = new Date();
    (document.querySelector(".cover-date").textContent = e.toLocaleDateString(
      "en-US",
      { weekday: "short" }
    )),
      (document.querySelector(".cover-time").textContent = e.toLocaleTimeString(
        "en-US",
        { hour: "numeric", minute: "numeric", hour12: !0 }
      ));
  });
